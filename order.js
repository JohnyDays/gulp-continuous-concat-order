// Generated by CoffeeScript 1.8.0
(function() {
  var minimatch,
    __hasProp = {}.hasOwnProperty;

  minimatch = require('minimatch');

  module.exports = function(buffer, opts) {
    var contents, filename, index_of_unmatched, item, order_glob, order_rank, rank_object, ranked_array, sorted_array, sorted_buffer, unmatched_rank, value, _i, _j, _len, _len1, _ref;
    if (opts.order == null) {
      return buffer;
    }
    if (opts.order.constructor !== Array) {
      opts.order = [opts.order];
    }
    index_of_unmatched = opts.order.indexOf("unmatched_files");
    if (index_of_unmatched === -1) {
      index_of_unmatched = null;
    }
    unmatched_rank = index_of_unmatched != null ? index_of_unmatched : opts.order.length;
    rank_object = {};
    for (filename in buffer) {
      if (!__hasProp.call(buffer, filename)) continue;
      contents = buffer[filename];
      rank_object[filename] = {
        rank: unmatched_rank,
        contents: contents
      };
    }
    for (filename in rank_object) {
      if (!__hasProp.call(rank_object, filename)) continue;
      _ref = opts.order;
      for (order_rank = _i = 0, _len = _ref.length; _i < _len; order_rank = ++_i) {
        order_glob = _ref[order_rank];
        if (minimatch(filename, order_glob)) {
          rank_object[filename].rank = order_rank;
          break;
        }
      }
    }
    ranked_array = (function() {
      var _results;
      _results = [];
      for (filename in rank_object) {
        if (!__hasProp.call(rank_object, filename)) continue;
        value = rank_object[filename];
        _results.push({
          filename: filename,
          rank: value.rank,
          contents: value.contents
        });
      }
      return _results;
    })();
    sorted_array = ranked_array.sort(function(a, b) {
      return a.rank - b.rank;
    });
    sorted_buffer = {};
    for (_j = 0, _len1 = sorted_array.length; _j < _len1; _j++) {
      item = sorted_array[_j];
      sorted_buffer[item.filename] = item.contents;
    }
    return sorted_buffer;
  };

}).call(this);
